# -*- bash -*-
# shellcheck shell=bash
# ~/.bash_osx: macOS specific settings

################################################################################
# macOS Modifications and Tweaks
################################################################################

# Silence notice about `zsh`.
export BASH_SILENCE_DEPRECATION_WARNING=1

# Ignore .DS_Store files in tab complete. See also:
#
# https://apple.stackexchange.com/questions/71398/
# https://apple.stackexchange.com/a/71402/59583
#
export FIGNORE=$FIGNORE:DS_Store

# Ignore .Trash folders
export FIGNORE=$FIGNORE:.Trash

# Fix Pinentry
#
# https://gpgtools.tenderapp.com/discussions/problems/50502-how-to-avoid-pinentry-pop-up-window-when-using-terminal
#
GPG_TTY="$(tty)"
export GPG_TTY
export PINENTRY_USER_DATA="USE_CURSES=1"

# Tab complete symlinks. See also:
#
# https://superuser.com/questions/271626/
# https://superuser.com/questions/155167/
# https://superuser.com/a/271677/10121
#
bind 'set mark-symlinked-directories on'

################################################################################
# Homebrew Modifications and Tweaks
################################################################################

# Address "-bash: brew: command not found" on M1 macs
if [[ $(uname -m) == 'arm64' ]]; then
    eval "$(/opt/homebrew/bin/brew shellenv)"
fi

# Homebrew's sbin fix
export PATH="/usr/local/sbin:$PATH"

# Hide Homebrew Env Hints
export HOMEBREW_NO_ENV_HINTS=true

# Attempt to load brew - bash completions
if [ -f "$(brew --prefix)/etc/bash_completion" ]; then
    # shellcheck source=/dev/null
    source "$(brew --prefix)/etc/bash_completion"
fi

# Configure NVM
if [ -f "$(brew --prefix nvm)/nvm.sh" ]; then
    # shellcheck source=/dev/null
    source "$(brew --prefix nvm)/nvm.sh"
fi

# Configure Rust
if [ -d "$(brew --prefix rustup)/bin" ]; then
    RUST_BIN="$(brew --prefix rustup)/bin"
    export PATH="$PATH:$RUST_BIN"
fi

################################################################################
# macOS Aliases and Functions
################################################################################

update_brew() {
    bold=$(tput bold);
    normal=$(tput sgr0);
    brew --version &&
    echo "${bold} > brew update${normal}" &&
    brew update &&
    echo "${bold} > brew upgrade${normal}" &&
    brew upgrade &&
    echo "${bold} > brew autoremove${normal}" &&
    brew autoremove &&
    echo "${bold} > brew cleanup${normal}" &&
    brew cleanup &&
    echo "${bold} > brew doctor${normal}" &&
    brew doctor;
}
